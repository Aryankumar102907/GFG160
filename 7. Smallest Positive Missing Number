//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution {
  public:
    // Function to find the smallest positive number missing from the array.
    int missingNumber(vector<int> &arr) {
        // Your code here
        sort(arr.begin(), arr.end());
        if (find(arr.begin(), arr.end(), 1) == arr.end())
        {
            return 1;
        }
        
        for(int  i = 0; i < arr.size(); i++)
        {
            if(arr[i] > 0)
            {
                auto it = find(arr.begin() + i + 1, arr.end(), arr[i] + 1);
                if(it == arr.end())
                {
                    return arr[i] + 1;
                }
                else
                {
                    i = distance(arr.begin(), it) - 1;
                }
            }
        }
        return 1;
    }
};

//{ Driver Code Starts.

// int missingNumber(int arr[], int n);

int main() {

    // taking testcases
    int t;
    cin >> t;
    cin.ignore();
    while (t--) {

        vector<int> arr;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }

        Solution ob;
        int result = ob.missingNumber(arr);
        cout << result << "\n";
    }
    return 0;
}
// } Driver Code Ends
